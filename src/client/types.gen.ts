// This file is auto-generated by @hey-api/openapi-ts

export type AbstractJsonSchemaPropertyObject = {
    title?: string;
    readOnly?: boolean;
};

export type Item = {
    type?: string;
    properties?: {
        [key: string]: AbstractJsonSchemaPropertyObject;
    };
    requiredProperties?: Array<string>;
};

export type JsonSchema = {
    title?: string;
    description?: string;
    properties?: {
        [key: string]: AbstractJsonSchemaPropertyObject;
    };
    requiredProperties?: Array<string>;
    definitions?: {
        [key: string]: Item;
    };
    type?: string;
    $schema?: string;
};

export type RepresentationModelObject = {
    _links?: Links;
};

export type EntityModelTodo = {
    id?: number;
    title?: string;
    description?: string;
    completed?: boolean;
    _links?: Links;
};

export type PageMetadata = {
    size?: number;
    totalElements?: number;
    totalPages?: number;
    number?: number;
};

export type PagedModelEntityModelTodo = {
    _embedded?: {
        todos?: Array<EntityModelTodo>;
    };
    _links?: Links;
    page?: PageMetadata;
};

export type TodoRequestBody = {
    id?: number;
    title?: string;
    description?: string;
    completed?: boolean;
};

export type Link = {
    href?: string;
    hreflang?: string;
    title?: string;
    type?: string;
    deprecation?: string;
    profile?: string;
    name?: string;
    templated?: boolean;
};

export type Links = {
    [key: string]: Link;
};

export type ListAllFormsOfMetadataData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/profile';
};

export type ListAllFormsOfMetadataResponses = {
    /**
     * OK
     */
    200: RepresentationModelObject;
};

export type ListAllFormsOfMetadataResponse = ListAllFormsOfMetadataResponses[keyof ListAllFormsOfMetadataResponses];

export type DescriptorData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/profile/todos';
};

export type DescriptorResponses = {
    /**
     * OK
     */
    200: string;
};

export type DescriptorResponse = DescriptorResponses[keyof DescriptorResponses];

export type GetCollectionResourceTodoGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Zero-based page index (0..N)
         */
        page?: number;
        /**
         * The size of the page to be returned
         */
        size?: number;
        /**
         * Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.
         */
        sort?: Array<string>;
    };
    url: '/todos';
};

export type GetCollectionResourceTodoGetResponses = {
    /**
     * OK
     */
    200: PagedModelEntityModelTodo;
};

export type GetCollectionResourceTodoGetResponse = GetCollectionResourceTodoGetResponses[keyof GetCollectionResourceTodoGetResponses];

export type PostCollectionResourceTodoPostData = {
    body: TodoRequestBody;
    path?: never;
    query?: never;
    url: '/todos';
};

export type PostCollectionResourceTodoPostResponses = {
    /**
     * Created
     */
    201: EntityModelTodo;
};

export type PostCollectionResourceTodoPostResponse = PostCollectionResourceTodoPostResponses[keyof PostCollectionResourceTodoPostResponses];

export type DeleteItemResourceTodoDeleteData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/todos/{id}';
};

export type DeleteItemResourceTodoDeleteErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type DeleteItemResourceTodoDeleteResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteItemResourceTodoDeleteResponse = DeleteItemResourceTodoDeleteResponses[keyof DeleteItemResourceTodoDeleteResponses];

export type GetItemResourceTodoGetData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/todos/{id}';
};

export type GetItemResourceTodoGetErrors = {
    /**
     * Not Found
     */
    404: unknown;
};

export type GetItemResourceTodoGetResponses = {
    /**
     * OK
     */
    200: EntityModelTodo;
};

export type GetItemResourceTodoGetResponse = GetItemResourceTodoGetResponses[keyof GetItemResourceTodoGetResponses];

export type PatchItemResourceTodoPatchData = {
    body: TodoRequestBody;
    path: {
        id: string;
    };
    query?: never;
    url: '/todos/{id}';
};

export type PatchItemResourceTodoPatchResponses = {
    /**
     * OK
     */
    200: EntityModelTodo;
    /**
     * No Content
     */
    204: void;
};

export type PatchItemResourceTodoPatchResponse = PatchItemResourceTodoPatchResponses[keyof PatchItemResourceTodoPatchResponses];

export type PutItemResourceTodoPutData = {
    body: TodoRequestBody;
    path: {
        id: string;
    };
    query?: never;
    url: '/todos/{id}';
};

export type PutItemResourceTodoPutResponses = {
    /**
     * OK
     */
    200: EntityModelTodo;
    /**
     * Created
     */
    201: EntityModelTodo;
    /**
     * No Content
     */
    204: void;
};

export type PutItemResourceTodoPutResponse = PutItemResourceTodoPutResponses[keyof PutItemResourceTodoPutResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};